include:
  - project: cloud/integrations/ci
    file:
      - default.yml

variables:
  COVERAGE_FILE: .testCoverage.txt

workflow:
  rules:
    - # Do not execute on main branch
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - # Do not execute on tag
      if: $CI_COMMIT_TAG != null
      when: never
    - # Avoid duplicate pipelines in MRs
      if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - when: always

test:golangci-lint:
  stage: test
  image: golangci/golangci-lint:v1.54.2
  script:
    - golangci-lint run -v

test:go-mod-tidy:
  stage: test
  image: golang:1.21
  script:
    - go mod tidy -v
    - git diff --exit-code

test:go-generate:
  stage: test
  image: golang:1.21
  variables:
    GOBIN: "$CI_PROJECT_DIR/bin"
  before_script:
    - script/install_tools.sh
  script:
    - export PATH="$GOBIN:$PATH"
    - go generate ./...
    - git diff --exit-code

test:tests:
  stage: test
  image: golang:1.21
  script:
    - |
      go test -v \
              -race \
              -coverprofile=$COVERAGE_FILE \
              ./...
    - go tool cover -func=$COVERAGE_FILE | tail -n1
    - GOBIN="$CI_PROJECT_DIR/bin" script/install_tools.sh
    - $CI_PROJECT_DIR/bin/gocover-cobertura < $COVERAGE_FILE > coverage.xml

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
